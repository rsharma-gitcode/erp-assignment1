{"ast":null,"code":"var _jsxFileName = \"/Users/rajansharma/Development/github/personal/erp-exercise1/src/react/primes/src/components/PrimeNumbers/PrimeNumbersView.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, InputLabel, List, ListItem, Paper, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrimeNumbersView = () => {\n  _s();\n\n  const [upperBound, setUpperBound] = useState(\"\");\n  const [responseData, setResponseData] = useState([]);\n  const [invalidInput, setInvalidInput] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const isValidInput = () => {\n      let isValid = true;\n\n      if (Number.isNaN(upperBound)) {\n        isValid = false;\n      } else if (Number.parseInt(upperBound) < 2) {\n        isValid = false;\n      }\n\n      return isValid;\n    };\n\n    if (isValidInput()) {\n      const url = \"http://localhost:8080/primes/\" + upperBound; //try fetch\n\n      fetch(url).then(response => response.json()).then(data => {\n        setResponseData(data);\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n      });\n    } else {\n      setInvalidInput(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      sx: {\n        margin: \"0.5em\"\n      },\n      children: \"Generate Prime Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        margin: \"auto\",\n        width: \"60%\",\n        padding: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"upperBound\",\n          children: \"Enter a number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          error: isValidInput ? true : false,\n          id: \"upperBound\",\n          label: \"Number\",\n          type: \"text\",\n          sx: {\n            marginTop: \"0.5em\"\n          },\n          name: \"upperBound\",\n          onChange: e => setUpperBound(e.target.value),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            marginTop: \"2em\"\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"50%\",\n        margin: \"auto\",\n        padding: \"1em\"\n      },\n      children: [responseData.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"left\",\n        variant: \"h6\",\n        sx: {\n          margin: \"0.5em\"\n        },\n        children: \"Here is a list of prime numbers between 0 and the number entered above.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: responseData.length > 0 && responseData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              display: \"inline\",\n              listStyle: \"none\",\n              padding: \"2px\",\n              wordWrap: \"break-word\"\n            },\n            children: (index ? \", \" : \"\") + item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrimeNumbersView, \"AWKHc3CK8bY/A0AnNi4OKnlTKE8=\");\n\n_c = PrimeNumbersView;\nexport default PrimeNumbersView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrimeNumbersView\");","map":{"version":3,"sources":["/Users/rajansharma/Development/github/personal/erp-exercise1/src/react/primes/src/components/PrimeNumbers/PrimeNumbersView.tsx"],"names":["Button","Container","InputLabel","List","ListItem","Paper","TextField","Typography","useState","PrimeNumbersView","upperBound","setUpperBound","responseData","setResponseData","invalidInput","setInvalidInput","handleSubmit","event","preventDefault","isValidInput","isValid","Number","isNaN","parseInt","url","fetch","then","response","json","data","catch","error","console","margin","width","padding","marginTop","e","target","value","shrink","length","map","item","index","display","listStyle","wordWrap"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,KANF,EAOEC,SAPF,EAQEC,UARF,QASO,eATP;AAUA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAmB;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMQ,YAAY,GAAG,MAAOC,KAAP,IAAiD;AACpEA,IAAAA,KAAK,CAACC,cAAN;;AAEA,UAAMC,YAAY,GAAG,MAAe;AAClC,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAIC,MAAM,CAACC,KAAP,CAAaZ,UAAb,CAAJ,EAA8B;AAC5BU,QAAAA,OAAO,GAAG,KAAV;AACD,OAFD,MAEO,IAAIC,MAAM,CAACE,QAAP,CAAgBb,UAAhB,IAA8B,CAAlC,EAAqC;AAC1CU,QAAAA,OAAO,GAAG,KAAV;AACD;;AACD,aAAOA,OAAP;AACD,KARD;;AASA,QAAID,YAAY,EAAhB,EAAoB;AAClB,YAAMK,GAAG,GAAG,kCAAkCd,UAA9C,CADkB,CAElB;;AACAe,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdhB,QAAAA,eAAe,CAACgB,IAAD,CAAf;AACD,OAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,OAPH;AAQD,KAXD,MAYI;AACEhB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACL;AACF,GA3BD;;AA6BA,sBACE;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,EAAE,EAAE;AAAEiB,QAAAA,MAAM,EAAE;AAAV,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEA,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,KAAzB;AAAgCC,QAAAA,OAAO,EAAE;AAAzC,OAAX;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAEhB,YAAY,GAAC,IAAD,GAAM,KAF3B;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,KAAK,EAAC,QAJR;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,EAAE,EAAE;AAAEiB,YAAAA,SAAS,EAAE;AAAb,WANN;AAOE,UAAA,IAAI,EAAC,YAPP;AAQE,UAAA,QAAQ,EAAGC,CAAD,IAAa1B,aAAa,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CARtC;AASE,UAAA,eAAe,EAAE;AACfC,YAAAA,MAAM,EAAE;AADO;AATnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAgBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,EAAE,EAAE;AAAEJ,YAAAA,SAAS,EAAE;AAAb,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eA0BE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAE;AAAEF,QAAAA,KAAK,EAAE,KAAT;AAAgBD,QAAAA,MAAM,EAAE,MAAxB;AAAgCE,QAAAA,OAAO,EAAE;AAAzC,OAAf;AAAA,iBACGvB,YAAY,CAAC6B,MAAb,GAAsB,CAAtB,iBACC,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,EAAE,EAAE;AAAER,UAAAA,MAAM,EAAE;AAAV,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOE,QAAC,IAAD;AAAA,kBACGrB,YAAY,CAAC6B,MAAb,GAAsB,CAAtB,IACC7B,YAAY,CAAC8B,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,8BACE,QAAC,QAAD;AACE,YAAA,EAAE,EAAE;AACFC,cAAAA,OAAO,EAAE,QADP;AAEFC,cAAAA,SAAS,EAAE,MAFT;AAGFX,cAAAA,OAAO,EAAE,KAHP;AAIFY,cAAAA,QAAQ,EAAE;AAJR,aADN;AAAA,sBASG,CAACH,KAAK,GAAG,IAAH,GAAU,EAAhB,IAAsBD;AATzB,aAOOC,KAPP;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAdD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAxFD;;GAAMnC,gB;;KAAAA,gB;AAyFN,eAAeA,gBAAf","sourcesContent":["import {\n  Button,\n  Container,\n  InputLabel,\n  List,\n  ListItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst PrimeNumbersView = (): JSX.Element => {\n  const [upperBound, setUpperBound] = useState(\"\");\n  const [responseData, setResponseData] = useState([]);\n  const [invalidInput, setInvalidInput]=useState(false);\n  const handleSubmit = async (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    \n    const isValidInput = (): boolean => {\n      let isValid = true;\n      if (Number.isNaN(upperBound)) {\n        isValid = false;\n      } else if (Number.parseInt(upperBound) < 2) {\n        isValid = false;\n      }\n      return isValid;\n    };\n    if (isValidInput()) {\n      const url = \"http://localhost:8080/primes/\" + upperBound;\n      //try fetch\n      fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setResponseData(data);\n        })\n        .catch((error) => {\n          console.error(\"There was an error!\", error);\n        });\n    }\n    else{\n          setInvalidInput(true);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Typography align=\"center\" variant=\"h4\" sx={{ margin: \"0.5em\" }}>\n        Generate Prime Numbers\n      </Typography>\n      <Paper sx={{ margin: \"auto\", width: \"60%\", padding: \"2em\" }}>\n        <Container maxWidth=\"sm\">\n          <InputLabel htmlFor=\"upperBound\">Enter a number</InputLabel>\n          <TextField\n            fullWidth\n            error={isValidInput?true:false}\n            id=\"upperBound\"\n            label=\"Number\"\n            type=\"text\"\n            sx={{ marginTop: \"0.5em\" }}\n            name=\"upperBound\"\n            onChange={(e): void => setUpperBound(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <input type=\"text\" name=\"upperBound\" onChange={(e) :void  => setUpperBound(e.target.value)}/> */}\n          <Button type=\"submit\" variant=\"contained\" sx={{ marginTop: \"2em\" }}>\n            Generate\n          </Button>\n        </Container>\n      </Paper>\n      <Container sx={{ width: \"50%\", margin: \"auto\", padding: \"1em\" }}>\n        {responseData.length > 0 && (\n          <Typography align=\"left\" variant=\"h6\" sx={{ margin: \"0.5em\" }}>\n            Here is a list of prime numbers between 0 and the number entered\n            above.\n          </Typography>\n        )}\n        <List>\n          {responseData.length > 0 &&\n            responseData.map((item, index) => {\n              return (\n                <ListItem\n                  sx={{\n                    display: \"inline\",\n                    listStyle: \"none\",\n                    padding: \"2px\",\n                    wordWrap: \"break-word\",\n                  }}\n                  key={index}\n                >\n                  {(index ? \", \" : \"\") + item}\n                </ListItem>\n              );\n            })}\n        </List>\n      </Container>\n    </form>\n  );\n};\nexport default PrimeNumbersView;\n"]},"metadata":{},"sourceType":"module"}