{"ast":null,"code":"var _jsxFileName = \"/Users/rajansharma/Development/github/personal/erp-exercise1/src/react/primes/src/components/PrimeNumbers/PrimeNumbersView.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, InputLabel, Paper, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrimeNumbersView = () => {\n  _s();\n\n  const [upperBound, setUpperBound] = useState(\"\");\n  const [responseData, setResponseData] = useState([]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const url = \"http://localhost:8080/primes/\" + upperBound; //try fetch\n\n    fetch(url).then(response => response.json()).then(data => {\n      setResponseData(data);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      sx: {\n        margin: '0.5em'\n      },\n      children: \"Generate Prime Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        margin: \"auto\",\n        width: \"50%\",\n        padding: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"upperBound\",\n          children: \"Enter a number to generate a list of prime numbers between 0 and the number.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"upperBound\",\n          label: \"Number\",\n          type: \"text\",\n          name: \"upperBound\",\n          onChange: e => setUpperBound(e.target.value),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            marginTop: \"1em\"\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: responseData.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrimeNumbersView, \"XtLDM6M9DuuNCMV7TRKXW5VSmWk=\");\n\n_c = PrimeNumbersView;\nexport default PrimeNumbersView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrimeNumbersView\");","map":{"version":3,"sources":["/Users/rajansharma/Development/github/personal/erp-exercise1/src/react/primes/src/components/PrimeNumbers/PrimeNumbersView.tsx"],"names":["Button","Container","InputLabel","Paper","TextField","Typography","useState","PrimeNumbersView","upperBound","setUpperBound","responseData","setResponseData","handleSubmit","event","preventDefault","url","fetch","then","response","json","data","catch","error","console","margin","width","padding","e","target","value","shrink","marginTop","map","item","index"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,KAAxC,EAA+CC,SAA/C,EAA0DC,UAA1D,QAA4E,eAA5E;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAmB;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiD;AACpEA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,GAAG,GAAG,kCAAkCP,UAA9C,CAFoE,CAGpE;;AACAQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdT,MAAAA,eAAe,CAACS,IAAD,CAAf;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KAPH;AAQD,GAZD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,EAAE,EAAE;AAAEY,QAAAA,MAAM,EAAC;AAAT,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEA,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,KAAzB;AAAgCC,QAAAA,OAAO,EAAE;AAAzC,OAAX;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,EAAE,EAAC,YAFL;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,IAAI,EAAC,YALP;AAME,UAAA,QAAQ,EAAGC,CAAD,IAAalB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CANtC;AAOE,UAAA,eAAe,EAAE;AACfC,YAAAA,MAAM,EAAE;AADO;AAPnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,EAAE,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAiBE;AAAA,oBACGrB,YAAY,CAACsB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,gCAAO;AAAA,wBAAiBD;AAAjB,eAASC,KAAT;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtDD;;GAAM3B,gB;;KAAAA,gB;AAuDN,eAAeA,gBAAf","sourcesContent":["import { Button, Container, InputLabel, Paper, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst PrimeNumbersView = (): JSX.Element => {\n  const [upperBound, setUpperBound] = useState(\"\");\n  const [responseData, setResponseData] = useState([]);\n\n  const handleSubmit = async (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    const url = \"http://localhost:8080/primes/\" + upperBound;\n    //try fetch\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setResponseData(data);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Typography\n        align=\"center\"\n        variant=\"h4\"\n        sx={{ margin:'0.5em'}}\n      >\n        Generate Prime Numbers\n      </Typography>\n      <Paper sx={{ margin: \"auto\", width: \"50%\", padding: \"2em\" }}>\n        <Container maxWidth=\"sm\">\n          <InputLabel htmlFor =\"upperBound\">Enter a number to generate a list of prime numbers between 0 and the number.</InputLabel>\n          <TextField\n            fullWidth\n            id=\"upperBound\"\n            label=\"Number\"\n            type=\"text\"\n            name=\"upperBound\"\n            onChange={(e): void => setUpperBound(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <input type=\"text\" name=\"upperBound\" onChange={(e) :void  => setUpperBound(e.target.value)}/> */}\n          <Button type=\"submit\" variant=\"contained\" sx={{ marginTop: \"1em\"}}>\n            Generate\n          </Button>\n          <ul>\n            {responseData.map((item, index) => {\n              return <li key={index}>{item}</li>;\n            })}\n          </ul>\n        </Container>\n      </Paper>\n    </form>\n  );\n};\nexport default PrimeNumbersView;\n"]},"metadata":{},"sourceType":"module"}